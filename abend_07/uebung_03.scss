@mixin triangle($direction: up, $size: 10px, $color: red) {
  width: 0; 
  height: 0;
  
  @if $direction == 'up' {
    border-left: $size solid transparent;
    border-right: $size solid transparent;  
    border-bottom: $size solid $color;
  } @else if $direction == 'down' {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
  } @else if $direction == 'right' {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  } @else if $direction == 'left' {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent; 
    border-right:$size solid $color; 
  }
}

// Dreieck aufrufen
.awesome-triangle {
  @include triangle(up, 100px, lightblue);
  margin-bottom:50px;
}

// Dreieck nach oben
.arrow-up {
  @include triangle(up, 50px, pink);
  margin-bottom:30px;
}

// Dreieck nach rechts
.arrow-right {
  @include triangle(right, 50px, orange);
}

// Dreieck nach unten
.arrow-down {
  @include triangle(down, 50px, brown);
}

// Dreieck nach links 
.arrow-left {
  @include triangle(left, 50px, yellow);
}

/* Verwendung des Dreiecks innerhalb einer Box mithilfe von before-Pseudo-Element
wie z.B. Sprechblase/Kommentar */

.box {
  width: 200px;
  height: 200px;
  position: relative;
  background-color: red;
  margin-bottom:30px;
  
  &:before {
    content:"";
    position: absolute;
    left: 100%;
    top: 50%;
    transform: translateY(-50%);
    @include triangle(right, 20px, red);
  }
}